AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  python3.10

  Sample SAM Template for cognito-on-browser

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

    Tracing: Active
  Api:
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"
    TracingEnabled: true

Resources:
  # ユーザプール(認証部分)の定義
  # Ref: https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html
  MyCognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub ${AWS::StackName}-user-pool
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: false
          RequireUppercase: true
          TemporaryPasswordValidityDays: 7
      Schema:
        - AttributeDataType: String
          Name: email
          Required: true
        - AttributeDataType: String
          Name: name
          Required: true
        - AttributeDataType: String
          Name: comment
          Mutable: true
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email

  # ユーザプールクライアントの定義
  # Ref: https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html
  MyCognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Sub ${AWS::StackName}-client-app
      UserPoolId: !Ref MyCognitoUserPool
      GenerateSecret: false

  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-lambda
      Description: !Sub Lambda function for ${AWS::StackName}
      PackageType: Image
      Architectures:
      - x86_64
      Events:
        LambdaFunctionEvent:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./src/
      DockerTag: python3.10-v1

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name: !Sub ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName: !Ref ApplicationResourceGroup
      AutoConfigurationEnabled: true

Outputs:
  # ユーザプールのIDを出力
  UserPoolId:
    Value: !Ref MyCognitoUserPool
    Export:
      Name: !Sub ${AWS::StackName}-user-pool-id

  # ユーザプールクライアントのIDを出力
  UserPoolClientId:
    Value: !Ref MyCognitoUserPoolClient
    Export:
      Name: !Sub ${AWS::StackName}-user-pool-client-id

  LambdaFunctionEventApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
